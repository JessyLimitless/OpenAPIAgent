Streamlit과 LangChain을 사용해 간단한 챗봇 애플리케이션을 구현하는 Python 코드를 작성해 주세요. 이 애플리케이션은 다음 기능을 포함해야 합니다:
1.OpenAI 호출 시 v1/chat/completions 엔드포인트를 사용해 주고 매개변수로는 사용하지 마세요.
2. OpenAI 모델 설정: GPT-3.5-turbo 모델을 사용할 수 있도록 OpenAI API 키를 하드 코딩하여 설정해 주세요. 여기서 모델의 창의성(temperature)을 0.99로 설정해 주세요. 
3. ConversationChain 생성: ConversationChain을 구성하고, ConversationBufferMemory를 사용해 대화 상태를 유지합니다. 이 메모리 객체는 사용자의 질문과 챗봇의 응답을 기록하는 데 사용됩니다.
4. Streamlit UI 구성: 애플리케이션의 제목과 간단한 안내 메시지를 화면에 표시합니다.
5. 대화 기록 관리 및 표시: 사용자의 질문과 챗봇의 응답을 저장해 대화 기록을 관리합니다. 대화 기록은 st.chat_message를 사용해 사용자와 챗봇의 메시지를 구분하여 화면에 표시합니다.
6. 사용자 입력 처리: 사용자가 질문을 입력하면, 챗봇이 응답을 생성하고, 이 응답을 대화 기록에 추가하여 화면에 표시합니다. 
이 요구 사항을 바탕으로, 챗봇 애플리케이션을 구현하는 Python 코드를 작성해 주세요.


오류 1회 수정 

st.chat_message()는 Streamlit의 새로운 기능으로, 메시지를 표시할 때 하나의 인자만 받아야 하는데, 두 개 이상의 인자를 전달하는 경우 오류가 발생합니다. 이 문제를 해결하기 위해서는 각 메시지에 대한 역할(user, assistant)을 설정하고, 그 역할에 맞게 메시지를 출력하는 방식으로 수정해야 합니다.